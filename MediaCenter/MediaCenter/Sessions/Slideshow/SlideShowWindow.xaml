<Window x:Class="MediaCenter.Sessions.Slideshow.SlideShowWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:MediaCenter.Sessions.Slideshow"
        xmlns:media="clr-namespace:MediaCenter.Media"
        xmlns:controls="clr-namespace:MediaCenter.WPF.Controls"
        mc:Ignorable="d"
        Title="SlideShowWindow" Height="300" Width="300"
        WindowState="Maximized" WindowStyle="None"
        d:DataContext="{d:DesignInstance local:SlideShowViewModel}">
    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type media:ImageItemViewModel}">
                <Image Source="{Binding Path=MediaItem.Content}" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Image.LayoutTransform>
                        <RotateTransform Angle="{Binding Path=MediaItem.Rotation}"/>
                    </Image.LayoutTransform>
                </Image>
            </DataTemplate>
            <DataTemplate DataType="{x:Type media:VideoItemViewModel}">
                <media:VideoItemView/>
            </DataTemplate>
            <media:PlayStateVisibilityConverter x:Key="VisibleWhenPlayingConverer" PlayingVisibility="Visible" NotPlayingVisibility="Collapsed"/>
            <media:PlayStateVisibilityConverter x:Key="CollapsedWhenPlayingConverer" PlayingVisibility="Collapsed" NotPlayingVisibility="Visible"/>
        </ResourceDictionary>
    </Window.Resources>
    
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding CloseCOmmand}"/>
    </Window.InputBindings>

    <interactivity:Interaction.Behaviors>
        <local:HideOnIdleMouseBehavior Interval="00:00:02"/>
    </interactivity:Interaction.Behaviors>

    <Grid Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <ContentControl Grid.Row="0" Grid.RowSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{Binding SelectedItemViewModel}"/>
        <Border x:Name="Controls" Grid.Row="1" Background="{StaticResource AppDarkColor}" Opacity="0.75" Margin="70 0 70 30">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding SelectedItemViewModel.MediaItem.DateTaken}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="24"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <controls:ImageButton ImageSource="/Resources/Icons/previous.png" Command="{Binding SelectPreviousItemCommand}" Width="64" Height="64"/>
                    <controls:ImageButton ImageSource="/Resources/Icons/pause.png" Command="{Binding PauseCommand}" Width="64" Height="64"
                                          Visibility="{Binding Path=Status, Converter={StaticResource VisibleWhenPlayingConverer}}"/>
                    <controls:ImageButton ImageSource="/Resources/Icons/play.png" Command="{Binding PlayCommand}" Width="64" Height="64"
                                          Visibility="{Binding Path=Status, Converter={StaticResource CollapsedWhenPlayingConverer}}"/>
                    <controls:ImageButton ImageSource="/Resources/Icons/next.png" Command="{Binding SelectNextItemCommand}" Width="64" Height="64"/>
                </StackPanel>
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <controls:ImageToggleButton Grid.Column="0" x:Name="ShowIntervalSlider" CheckedImage="/Resources/Icons/timer.png" UncheckedImage="/Resources/Icons/timer.png" Width="64" Height="64"/>
                    <Slider Grid.Column="1" Value="{Binding Interval, Mode=TwoWay}" Minimum="2" Maximum="10" TickFrequency="1" IsSnapToTickEnabled="True" 
                            Visibility="{Binding ElementName=ShowIntervalSlider, Path=IsChecked, Converter={StaticResource CollapseWhenFalseConverter}}" VerticalAlignment="Center" />
                    <TextBlock Grid.Column="2" Text="{Binding Path=Interval, StringFormat={}{0}s}" Foreground="White" FontSize="20"
                               Visibility="{Binding ElementName=ShowIntervalSlider, Path=IsChecked, Converter={StaticResource CollapseWhenFalseConverter}}" VerticalAlignment="Center" />
                    <controls:ImageButton Grid.Column="4" ImageSource="/Resources/Icons/close_circle.png" Command="{Binding CloseCOmmand}" Width="64" Height="64" HorizontalAlignment="Right"/>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
